pipeline {
    agent any

    environment {
        AWS_REGION = 'us-east-1'  // Update with your preferred AWS region
        TF_VAR_key_name = 'rahul'  // Ensure this key pair exists in AWS EC2
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'project-7', url: 'https://github.com/sreekanth78933/simple-java-app.git'  // Replace with actual repo
            }
        }

        stage('Setup Terraform Backend') {
            steps {
                dir('backend') {
                    sh 'terraform init'
                    sh 'terraform apply -auto-approve'
                }
            }
        }

        stage('Initialize Terraform') {
            steps {
                dir('vpc') {
                    sh 'terraform init'
                }
                dir('ec2') {
                    sh 'terraform init'
                }
            }
        }

        stage('Validate Terraform') {
            steps {
                dir('vpc') {
                    sh 'terraform validate'
                }
                dir('ec2') {
                    sh 'terraform validate'
                }
            }
        }

        stage('Plan Terraform') {
            steps {
                dir('vpc') {
                    sh 'terraform plan -out=tfplan'
                }
                dir('ec2') {
                    sh 'terraform plan -var "public_subnet_id=$(terraform -chdir=vpc output -raw public_subnet_id)" -out=tfplan'
                }
            }
        }

        stage('Apply Terraform') {
            steps {
                input message: "Deploy resources to AWS?"
                dir('vpc') {
                    sh 'terraform apply -auto-approve'
                }
                dir('ec2') {
                    sh 'terraform apply -var "public_subnet_id=$(terraform -chdir=vpc output -raw public_subnet_id)" -auto-approve'
                }
            }
        }

        stage('Show Outputs') {
            steps {
                dir('vpc') {
                    sh 'terraform output'
                }
                dir('ec2') {
                    sh 'terraform output'
                }
            }
        }
    }

    post {
        always {
            sh 'terraform destroy -auto-approve'  // Remove if you want resources to persist
        }
    }
}
